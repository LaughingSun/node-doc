{"name":"Node-doc","tagline":"Node doc is a documenting tool. You can extract documentation from your source code and convert it into markdown, for easy use in for example GitHub.","body":"# Node doc\r\n\r\nNode doc is a documenting tool. You can extract documentation from your source code and convert it into markdown, for easy use in for example GitHub.\r\n\r\n## Installation\r\n\r\nRequires Node.js and run ```npm install -g node-doc```\r\n\r\n## Getting started\r\n\r\n1. Install Node doc, see above.\r\n2. Open you terminal of choice an go to your code.\r\n2. run ```nodedoc SOURCE_DIR```, for example ```nodedoc lib```.\r\n3. Look into the ```doc``` folder and see the result.\r\n\r\n## Tags\r\n\r\n### Access\r\n\r\n```js\r\n/**\r\n * Private access.\r\n * @access private\r\n * or\r\n * @private\r\n */\r\nfunction privateFunction () {}\r\n\r\n/**\r\n * Public access.\r\n * @access public\r\n * or\r\n * @public\r\n */\r\nfunction publicFunction () {}\r\n```\r\n\r\n### Callback\r\n\r\n```js\r\n/**\r\n * Specifiy an callback\r\n * @callback name Description.\r\n *\r\n * example:\r\n * @callback myCallback I call it, whenever I like to.\r\n *                      Also, it accept multiline descriptions.\r\n * @param error {Error} An error object, if an error happend.\r\n * @param result {Object} The result of the async stuff.\r\n */\r\n\r\n/**\r\n * @title Do async\r\n * @desc do some async stuff\r\n *\r\n * @param stuff {Object} Object with a buch of stuff.\r\n * @param cb {myCallback} The callback I'll call.\r\n */\r\nfunction doAsync(stuff, cb) {\r\n  // do async stuff\r\n\r\n  cb(null, result);\r\n};\r\n```\r\n\r\n### Constant\r\n\r\n```js\r\n/**\r\n * A constant variable.\r\n * @constant name {Type} Description.\r\n *\r\n * example:\r\n * @constant MY_CONSTANT {Number} My constant number.\r\n */\r\nvar MY_CONSTANT = 10;\r\n```\r\n\r\n### Constructor\r\n\r\n```js\r\n/**\r\n * Indicate that a function is a constructor.\r\n * @constructor\r\n */\r\nfunction Constructor () {}\r\n```\r\n\r\n### Deprecated\r\n\r\n```js\r\n/**\r\n * Indicate that a function is deprecated.\r\n * @deprecated\r\n */\r\nfunction someOldFunction () {}\r\n```\r\n\r\n### Desc\r\n\r\n```js\r\n/**\r\n * @desc My description,\r\n *       accept multiline.\r\n */\r\nfunction describeMe () {}\r\n```\r\n\r\n### Example\r\n\r\n```js\r\n/**\r\n * Specify an example (one is also auto generated).\r\n * @example your example,\r\n *          accepts multiline comments.\r\n *\r\n * @example\r\n * var parser = require('parser');\r\n * var doc = parser(input, output, 'markdown');\r\n * // or don't save it\r\n * var doc = parser(input, 'markdown');\r\n */\r\nfunction parser (input, output, result) {}\r\n```\r\n\r\n### Param\r\n\r\n```js\r\n/**\r\n * A function parameter.\r\n * @param name {Type} Description.\r\n *\r\n * example:\r\n * @param param1\r\n * @param param2 {String}\r\n * @param param3 My parameter.\r\n * @param param4 {Object} My parameter.\r\n * @param param4.subparameter {String} Property of parameter.\r\n */\r\nfunction doStuff (param1, param2, param3, param4) {}\r\n```\r\n\r\n### Return\r\n\r\n```js\r\n/**\r\n * What a function returns.\r\n * @return {Type} Description.\r\n * or\r\n * @returns {Type} Description.\r\n *\r\n * example:\r\n * @return {Object} My return object.\r\n * @return .subparameter {String} Property of the return object.\r\n */\r\nfunction returnObject () {\r\n  return {\r\n    subparameter: 'Hi'\r\n  };\r\n}\r\n```\r\n\r\n### Throws\r\n\r\n```js\r\n/**\r\n * An error that a function might throw\r\n * @throw Error description.\r\n * or\r\n * @throws Error description.\r\n *\r\n * example:\r\n * @throw You broke me! This happend because..?\r\n *        I don't know.\r\n */\r\nfunction throwError () {\r\n  throw new Error('You broke me! This happend because..? I don\\'t know.');\r\n}\r\n```\r\n\r\n### Title\r\n\r\n```js\r\n/**\r\n * @title My title\r\n */\r\n```\r\n\r\n### Todo\r\n\r\n```js\r\n/**\r\n * When we still need to do some stuff, globally or per function.\r\n * @todo finish this.\r\n * or\r\n * @todo\r\n * - finish..\r\n * - this.\r\n *\r\n * example:\r\n * @todo Make better documentation.\r\n * @todo\r\n * - Write some more tests.\r\n * - Make this work.\r\n * - Then make it faster.\r\n */\r\n```\r\n\r\n## Want more examples?\r\n\r\nIf you want more examples, check the code in the lib directory. Because of course I document my own code :).\r\n\r\n## Want to see the result?\r\n\r\nIn the doc directory you can see the result of documenting this code.\r\n\r\n## Tests\r\n\r\nRun tests with ```npm test```, requires Mocha to be installed.\r\n\r\n## Coverage\r\n\r\nI try to get 100% coverage, you can see it for yourself with ```npm run-script coverage```, requires Istanbul to be installed.\r\n\r\n## Roadmap\r\n\r\n- Make a option to convert to Github.io pages\r\n- Follow module.exports for index (/readme) docs\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}